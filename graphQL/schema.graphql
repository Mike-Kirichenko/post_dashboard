type Query {
  user(id: ID!): User
  post(id: ID!): Post
  posts(page: Int, limit: Int, dateFrom: String, dateTo: String): PostsData #specifying returned data type, in this case its custom
}

type Mutation {
  createPost(input: CreatePostInput): Post
  deletePosts(postIds: [ID]): Boolean
  editPost(id: ID, input: EditPostInput): Post
}

type Post {
  id: ID! #ID! - means that id will type of ID and it's value can't be null
  title: String!
  text: String!
  createdAt: String!
  updatedAt: String!
  userId: ID!
  categoryId: ID!
  img: String
  user: User!
  category: Category
}

type PostsData {
  list: [Post]
  qty: Int
}

type Category {
  id: ID! #ID! - means that id will type of ID and it's value can't be null
  name: String!
}

type User {
  id: ID!
  nickname: String!
  firstName: String!
  lastName: String!
  password: String!
  avatar: String
  email: String!
}

input CreatePostInput {
  categoryId: ID!
  title: String!
  text: String!
}

input EditPostInput {
  categoryId: ID
  title: String
  text: String
}
